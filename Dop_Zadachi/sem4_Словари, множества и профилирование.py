# Задача Расстояние необязательная

# Надо вычислить расстояние между 2 точками в пространстве любой размерности. На входе два списка с координатами точек, на выходе одно число.

# Задача Сортировка необязательная

# Задайте двумерный прямоугольный список из целых чисел. Количество строк и столбцов задается с клавиатуры. 
# Отсортировать элементы по возрастанию слева направо и сверху вниз.

# Например, задан cписок:
# [[1 4 7 2],
# [5 9 10 3]]

# После сортировки
# [[1 2 3 4],
# [5 7 9 10]]


# задача Де моргана необязательная

# Тут вам пригодятся библиотеки random и time

# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.

# теперь надо проверить ее практически
# в цикле 100 раз прогоняем
# каждый раз генерируем случайное количество предикат от 3 до 15
# и конечно со случайным булевым значением
# и засекаем общее время выполнения программы
# юзаем библиотеки random и time
# предикаты НЕ ЗАДАЕМ как целое число!

# например, при первом эксперименте количество предикат сгенерировалось равным 4
# тогда получили 4 предикаты со случайным значением и например это [True, False, False, True]
# проверили равенство левой части и правой части теоремы де Моргана применительно к этим предикатам, если все ок, 
# то переходим к другому эксперименту, если теорема нарушается, то вывести всю информацию об этом

# в конце написать сколько времени отработал ваш код.


# ДОП задание Поход желанию

# Три друга взяли вещи в поход. Имеется словарь, где ключ - имя друга, а значение - кортеж вещей. Ответьте на вопросы:

# какие вещи взяли все три друга - "спички"

# какие вещи уникальны, есть только у одного друга - Лиза взяла косметичку, Вася взял топор, Ваня взял еду

# какие вещи есть у всех друзей кроме одного и имя того, у кого данная вещь отсутствует - у Лизы нет спальника,

# Код должен расширяться на любое большее количество друзей.

# hike = {
# 'Вася': ("спички", "спальник", "дрова", "топор"),
# 'Ваня': ("спальник", "спички", "вода", "еда"),
# 'Лиза': ("вода", "спички", "косметичка"),
# }

# задача Генерация необязательная

# Пользователь вводит натуральное k. Надо сформировать многочлен такой степени, где все коэффициенты случайные от -10 до 10.

# например, k=2 -> -x^2 + 3*x - 8 = 0
# тут коэффициенты -1,3,-8

# например, k=3 -> 3*x^3 - 2*x = 0
# тут коэффициенты 3,0,-2,0


# задача Сложение необязательная

# Даны два многочлена, которые вводит пользователь. как две строки.

# Задача - сформировать многочлен, содержащий сумму многочленов, и вывести как строку.

# Степени многочленов могут быть разные.

# например на входе 2x^2 + 4x + 5 = 0 и 5x^3 - 3*x^2 - 12 = 0

# на выходе будет 5x^3 - x^2 + 4х - 7 = 0
# можно использовать модуль re