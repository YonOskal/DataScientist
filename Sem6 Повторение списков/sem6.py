# list comprehension
# [выражение for элемент in итерируемый_объект if условие]
# Давайте разберем его подробнее:

# 1. Выражение: Это то, что вы хотите добавить в новый список. 
# Это может быть просто элемент, или же какое-то преобразование этого элемента. Например, item * 2 создаст новый элемент, который в два раза больше исходного.

# 2. for элемент in итерируемый_объект: 
#     Эта часть отвечает за перебор каждого элемента в итерируемом объекте (например, списке, строке, множестве и т.д.). 
#     В вашем примере item — это переменная, которая будет принимать значение каждого элемента из list1 по очереди.

# 3. if условие (необязательно): 
#     Это фильтр, который позволяет добавлять в новый список только те элементы, которые удовлетворяют определенному условию. 
#     Если условие истинно, элемент будет добавлен в результирующий список.

# Рассмотрим следующий пример:
# squared_evens = [x**2 for x in range(10) if x % 2 == 0]


# - x**2 — это выражение, которое мы хотим добавить в новый список.
# - for x in range(10) — мы перебираем значения от 0 до 9.
# - if x % 2 == 0 — мы добавляем в новый список только четные числа.

# В результате получится список квадратов четных чисел от 0 до 9:
# [0, 4, 16, 36, 64]


# sp = [random.randint(-10,10) for _ in range(10)]
# print(sp)
# print(sp := [random.randint(-10,10) for _ in range(10)])
# print(*sp)

# sp = [1,2,3,4,5,6,7,8,9,10]
# возведем все значения в квадрат
# sp2 = []
# for el in sp:
# sp2.append(el ** 2)
# print(sp2)

# print([el % 2 for el in sp ])

# возведем все нечетные значения в квадрат
# сократилось количество элементов
# print([el ** 2 for el in sp if el % 2])

# возведем все нечетные значения в квадрат, а четные - обнулим
# количество элементов осталось прежним
# print([el ** 2 if el % 2 else 0 for el in sp ])

# dict comprehension

# dd = {}
# sp = ["a","b","c","d","e"]
# for i in range(len(sp)):
#     dd[str(i)] = sp[i]
# print(dd)

# print({ el % 2 for el in sp })