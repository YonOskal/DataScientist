# Задание 1. Три списка
# Даны три списка.
# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]
# Нужно выполнить две задачи:
# 1. найти элементы, которые есть в каждом списке;
# 2. найти элементы из первого списка, которых нет во втором и третьем
# списках.
# Каждую задачу нужно выполнить двумя способами:
# 1. без использования множеств;
# 2. с использованием множеств.
# Пример выполнения на других данных:
# array_1 = [1, 2, 3, 4]
# array_2 = [2, 4]
# array_3 = [2, 3]
# Вывод:
# Задача 1:
# Решение без множеств: 2
# Решение с множествами: 2
# Задача 2:
# Решение без множеств: 1
# Решение с множествами: 1

# array_1 = [1, 5, 10, 20, 40, 80, 100]
# array_2 = [6, 7, 20, 80, 100]
# array_3 = [3, 4, 15, 20, 30, 70, 80, 120]

# array_1 = set(array_1)
# array_2 = set(array_2)
# array_3 = set(array_3)

# # res = array_1 & array_2 & array_3
# # # print(res)

# res1 = array_1 - array_2 - array_3
# print(res1)

# array_4 = []

# for i in array_1:
#     if i in array_2 and i in array_3:
#         array_4.append(i)

# print(array_4)
        
# array_5 = []

# for i in array_1:
#     if i not in array_2 and i not in array_3:
#         array_5.append(i)

# print(array_5)

# Задача 2. Палиндром
# Пользователь вводит строку. Необходимо написать программу, которая
# определяет, существует ли у этой строки перестановка, при которой она станет
# палиндромом. Затем она должна выводить соответствующее сообщение.
# Пример 1
# Введите строку: aab
# Можно сделать палиндромом
# Пример 2
# Введите строку: aabc
# Нельзя сделать палиндромом        
        
        
# str = "abbca"
# dict = {}

# count_nechet = 0


# for i in str:
#     if i in dict:
#         dict[i] += 1
#     elif i not in dict:
#         dict[i] = 1
        
# for keys, value in dict.items():
#     if value  % 2 == 1:
#         count_nechet += 1

# if count_nechet == 1:
#     print("Можно сделать палиндромом")
# else:
#     print("Нельзя сделать палиндромом")

# Задача 3. Словарь синонимов
# Одна библиотека поручила вам написать программу для оцифровки словарей
# синонимов. На вход в программу подаётся N пар слов. Каждое слово является
# синонимом для своего парного слова.
# Реализуйте код, который составляет словарь синонимов (все слова в словаре
# различны), затем запрашивает у пользователя слово и выводит на экран его
# синоним. Обеспечьте контроль ввода: если такого слова нет, выведите ошибку
# и запросите слово ещё раз. При этом проверка не должна зависеть от регистра
# символов.
# Пример
# Введите количество пар слов: 3
# Первая пара: Привет — Здравствуйте
# Вторая пара: Печально — Грустно
# Третья пара: Весело — Радостно
# Введите слово: интересно
# Такого слова в словаре нет.
# Введите слово: здравствуйте
# Синоним: Привет

# dict = {'Привет': 'Здравствуйте', 'Печально': 'Грустно', 'Весело': 'Радостно', 'Черный': 'Темный', 'Белый': 'Светлый'}
# N = 3
# # for _ in range (N):
#     # keys = input("Введите первое слово пары синонимов: ")
#     # value = input("Введите второе слово пары синонимов: ") 
#     # dict[keys] = value
       

# while True:
#     word = input("Введите искомое слово: ")
#     found = False
#     for keys, value in dict.items():
#         if word.lower() == keys.lower():
#             print(value)
#             found = True
#         elif word.lower() == value.lower():
#             print(keys)
#             found = True
#     if found:
#         break
#     if not found:
#         print("Слово не найдено!")
    
    
    
# Задача 4. Гистограмма частоты
# Создайте программу для лингвистов, которая будет инвертировать полученный
# словарь. То есть в качестве ключа будет частота, а в качестве значения —
# список символов с этой частотой. Вам нужно реаллизовать:
# 1. получить текст и создать из него оригинальный словарь частот;
# 2. создать новый словарь и заполнить его данными из оригинального
# словаря частот, используя количество повторов в качестве ключей, а
# буквы — в качестве значений, добавляя их в список для хранения.
# Пример
# Введите текст: здесь что-то написано
# Оригинальный словарь частот:
# : 2
# - : 1
# З : 1
# а : 2
# д : 1
# е : 1
# и : 1
# н : 2
# о : 3
# п : 1
# с : 2
# т : 2
# ч : 1
# ь : 1
# Инвертированный словарь частот:
# 1 : ['З', 'д', 'е', 'ь', 'ч', '-', 'п', 'и']
# 2 : ['с', ' ', 'т', 'н', 'а']
# 3 : ['о']
